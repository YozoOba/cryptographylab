#include<iostream>
#include<string.h>
using namespace std;
void decToBit(const int in[8], int out[64])
{
	//0xA5 = 1010(a) 0101(5)

	for (int i = 0; i < 8; i++)
	{
		//高位和低位
		int high = in[i] / 16;
		int low = in[i] % 16;
		for (int j = 0; j < 4; j++)
		{
			out[8 * i + 7 - j] = low % 2;
			out[8 * i + 3 - j] = high % 2;
			low /= 2;
			high /= 2;
		}
	}

}
void check(const int source[64], int other[16][64]) {
	int num = 0;
	for (int i = 0; i < 16; i++)
	{
		int count = 0;
		for (int j = 0; j < 64; j++) {
			if (other[i][j] == source[j]) {
				count++;
			}
		}
		cout << "第" << i + 1 << "行密文与原密文相差位数为：" << count << endl;
		num += count;
	}
	cout << "相差位数平均值为：" << num / 16 << endl;
	return ;
}
int main() {
	const int source[8] = { 0x82,0xdc,0xba,0xfb,0xde,0xab,0x66,0x02 };
	int sourcebit[64] = { 0 };
	decToBit(source, sourcebit);
	int in[16][8] = { 0xf7, 0x6b, 0x7f, 0x26, 0x6c, 0x1d, 0x4b, 0xc9,
		0x28 ,0x08 ,0x9c ,0x03 ,0xf3 ,0x90 ,0xad ,0xdf
		,0x74 ,0x7d ,0x1a ,0x4a ,0xaa ,0xd3 ,0xba ,0xe8
		,0x7f ,0xb1 ,0x16 ,0xad ,0x22 ,0xa1 ,0xaa ,0x53
		,0xbd ,0x88 ,0xad ,0x6d ,0xeb ,0xb9 ,0x9c ,0x5c
		,0xc3 ,0xd7 ,0xd3 ,0xac ,0x04 ,0x6b ,0x42 ,0x1e
		,0x36 ,0xd2 ,0xd1 ,0xc7 ,0xb2 ,0x33 ,0x41 ,0xb8
		,0xad ,0x5d ,0x3d ,0x7e ,0x67 ,0xb7 ,0x4a ,0xe3
		,0x82 ,0xdc ,0xba ,0xfb ,0xde ,0xab ,0x66 ,0x02
		,0xc1 ,0x00 ,0x79 ,0x04 ,0x9c ,0x7e ,0x21 ,0x36
		,0x4d ,0x1a ,0xda ,0x35 ,0xc4 ,0x16 ,0x86 ,0x73
		,0xf5 ,0x4c ,0x1d ,0x6f ,0x50 ,0x27 ,0xc3 ,0x6c
		,0xdb ,0x68 ,0x2c ,0x39 ,0x0e ,0x94 ,0x07 ,0x40
		,0x96 ,0xb1 ,0x4c ,0x87 ,0x09 ,0x96 ,0xc6 ,0xa2
	};
	int out[16][64] = { 0 };
	for (int i = 0; i < 16; i++) {
		decToBit(in[i], out[i]);
	}
	check(sourcebit, out);
	return 0;
}